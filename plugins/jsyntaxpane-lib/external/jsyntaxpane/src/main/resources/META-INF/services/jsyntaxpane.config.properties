#
# Main Configuration of JSyntaxPane
#
# -----------------------------------------------------------------------------
#
# These will be used by all kits, unless the same key is used for a specific
# kit, in which case the specific will be used:
#
# These are the componets that will be installed be default for any kit, unless
# specified otherwise
Components = jsyntaxpane.components.PairsMarker, \
    jsyntaxpane.components.LineNumbersRuler
# This is the color to highlight tokens whenever the cursor is on them
TokenMarker.Color = 0xffeeaa
# Colors for PairMarkers
PairMarker.Color = 0xffbb77
#
# Right Margin for LineNumbers border in pixels, Default = 5
LineNumbers.RightMargin = 10
# Foreground for line numbers, Default = Black
LineNumbers.Foreground = 0x333300
# Background for line numbers, Default = White
LineNumbers.Background = 0xeeeeff
# Default color for the Caret, Black
CaretColor = 0x000000
#
# Actions:
# The key is of the format:
# Actions.NAME = class, key
# where NAME is the name of the action as defined by class.getAction(NAME)
# class is the fully qualified class name of the SyntaxAction class.  Only
# one object of that class will be created for all the actions it provides
# and key is the keyboard key to map it to as specified by
# KeyStroke.getKeyStroge(String key)
#
Action.FIND = jsyntaxpane.actions.FindReplaceActions, control F
Action.REPLACE = jsyntaxpane.actions.FindReplaceActions, control H
Action.FIND_NEXT = jsyntaxpane.actions.FindReplaceActions, F3
Action.GOTO_LINE = jsyntaxpane.actions.GotoLineAction, control G
Action.INDENT = jsyntaxpane.actions.IndentAction, TAB
Action.UNINDENT = jsyntaxpane.actions.UnindentAction, shift TAB
# Action.JAVA_INDENT = jsyntaxpane.actions.JavaIndentAction, ENTER
Action.JINDENT = jsyntaxpane.actions.JIndentAction, ENTER
Action.UNDO = jsyntaxpane.actions.UndoAction, control Z
Action.REDO = jsyntaxpane.actions.RedoAction, control Y
Action.DELETE_LINES = jsyntaxpane.actions.DeleteLinesAction, control E
Action.DUPLICATE_LINES_UP = jsyntaxpane.actions.DuplicateLinesAction, shift control UP
Action.DUPLICATE_LINES_DOWN = jsyntaxpane.actions.DuplicateLinesAction, shift control DOWN
#
# View configuration:
# This controls how text is anti-aliased on the editor control:
# see the RenderingHints.VALUE_TEXT_ANTIALIAS.... for details
# DEFAULT: use the JRE default (default value)
# ON: set to on, let the JRE determine best method for the display
# OFF: no AA
# GASP: used on GTK
# HBGR:
# HRGB:
# VBGR:
# VRGM
TextAA = ON

#
# JavaSyntaxKit
#
JavaSyntaxKit.Components = jsyntaxpane.components.PairsMarker, \
    jsyntaxpane.components.LineNumbersRuler, \
    jsyntaxpane.components.TokenMarker
JavaSyntaxKit.TokenMarker.TokenTypes = IDENTIFIER, TYPE, TYPE2, TYPE3
#
# Performs single color selection (Default = false)
#
JavaSyntaxKit.SingleColorSelect = true
#
# DIsplaying of a right margin line.  If RightMarginColumn is 0, then no margin
# will be displayed
JavaSyntaxKit.RightMarginColumn = 80
JavaSyntaxKit.RightMarginColor = 0xdddddd
JavaSyntaxKit.Action.PARENTHESIS = jsyntaxpane.actions.PairAction, typed (
JavaSyntaxKit.Action.BRACKETS = jsyntaxpane.actions.PairAction, typed [
JavaSyntaxKit.Action.QUOTE = jsyntaxpane.actions.PairAction, typed '
JavaSyntaxKit.Action.DBL_QUOTE = jsyntaxpane.actions.PairAction, typed "
JavaSyntaxKit.Action.CLOSE_CURLY = jsyntaxpane.actions.JUnindentAction, typed }
JavaSyntaxKit.Action.TOGGLE_COMMENTS = jsyntaxpane.actions.ToggleCommentsAction, control SLASH
# For completions, you have to define the Action (key to trigger completions):
# JavaSyntaxKit.Action.COMPLETION = jsyntaxpane.actions.MapCompletionAction, control SPACE
JavaSyntaxKit.Action.COMBO_COMPLETION = jsyntaxpane.actions.ComboCompletionAction, control SPACE
# and then the specified completions map in the below file
JavaSyntaxKit.Completions.File = jsyntaxpane.javasyntaxkit.completions
#
# These are the completions to be in the IntelliSense completion dialog
# comma separated values.
# Vertical bars: if there is one, it will position the cursor.  If there are
# two, they will be start and end of selection
JavaSyntaxKit.COMBO_COMPLETION.Items = public, protected, private, class, static, \
  .toString(), .equals(|), .hashCode(), \
  JTextField, JEditorPane, JTextPane, JComboBox, JList, JTree, \
  jsyntaxpane, .setContentType("text/|lang|"), .setProperty("|key|")
#
# Other Java type actions for other languages:
#
JavaScriptSyntaxKit.Action.TOGGLE_COMMENTS = jsyntaxpane.actions.ToggleCommentsAction, control SLASH
GroovySyntaxKit.Action.TOGGLE_COMMENTS = jsyntaxpane.actions.ToggleCommentsAction, control SLASH
CSyntaxKit.Action.TOGGLE_COMMENTS = jsyntaxpane.actions.ToggleCommentsAction, control SLASH
CppSyntaxKit.Action.TOGGLE_COMMENTS = jsyntaxpane.actions.ToggleCommentsAction, control SLASH
# The LineComments Characters can be enclosed in double quotes if spaces are present
# in them
GroovySyntaxKit.TOGGLE_COMMENTS.LineComments = "// "
#
# Other Languages
RubySyntaxKit.Action.TOGGLE_COMMENTS = jsyntaxpane.actions.ToggleCommentsAction, control NUMBER_SIGN
RubySyntaxKit.TOGGLE_COMMENTS.LineComments = "# "
PythonSyntaxKit.Action.TOGGLE_COMMENTS = jsyntaxpane.actions.ToggleCommentsAction, control NUMBER_SIGN
PythonSyntaxKit.TOGGLE_COMMENTS.LineComments = "# "
# -----------------------------------------------------------------------------
#
# These are the componets that will be installed for XML
#
XmlSyntaxKit.Components = jsyntaxpane.components.PairsMarker, \
    jsyntaxpane.components.LineNumbersRuler
XmlSyntaxKit.PairMarker.Color = 0xffeeaa
